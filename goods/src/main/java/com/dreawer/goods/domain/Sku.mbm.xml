<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dreawer.goods.domain.Sku">
	
	<!-- ================================================================================== -->
	<!-- SQL新增																				-->
	<!-- ================================================================================== -->
	
	<!-- 批量添加SKU信息 -->
	<insert id="saveBatch" parameterType="Map">
		INSERT INTO godsi_sku(id, gods_id, inv_typ, inventory, lock_inv, sal_vol, ori_pr, price, description, code, barcode, crer_id, cre_tim, remark)
        VALUES
        <foreach collection="skus" item="sku" index="index" separator=",">
            (#{sku.id}, #{sku.goodsId}, #{sku.inventoryType}, #{sku.inventory}, #{sku.lockedInventory}, #{sku.salesVolume}, #{sku.originalPrice}, #{sku.price}, #{sku.description}, #{sku.code}, #{sku.barcode}, #{sku.createrId}, #{sku.createTime}, #{sku.remark})
        </foreach>
	</insert>
	
	<!-- ================================================================================== -->
	<!-- SQL删除																				-->
	<!-- ================================================================================== -->
	<!-- 根据SKUID删除SKU-->
	<!-- <delete id="delete" parameterType="String">
		DELETE FROM godsi_sku
		WHERE id = #{id}
	</delete> -->
	
	<!-- 根据商品ID删除SKU-->
	<delete id="deleteByGoodsId" parameterType="String">
		DELETE FROM godsi_sku
		WHERE gods_id = #{goodsId}
	</delete>
	<!-- ================================================================================== -->
	<!-- SQL更新																				-->
	<!-- ================================================================================== -->
	
	<!-- 批量更新SKU库存 -->
	<update id="updateBatchInventory" parameterType="Map">
	    UPDATE godsi_sku
  		SET inventory = 
    	<foreach collection="skus" item="sku" index="index" separator=" " open="case ID" close="end">
        	when #{sku.id} then #{sku.inventory}
    	</foreach>
    	WHERE id IN
    	<foreach collection="skus" item="sku" index="index" separator="," open="(" close=")">
        	#{sku.id}
   	 	</foreach>
	</update>
	
	<!-- 批量更新SKU锁定库存 -->
	<update id="updateBatchLockedInventory" parameterType="java.util.List">
		UPDATE godsi_sku
		SET lock_inv = 
		<foreach collection="skus" item="sku" index="index" separator=" " open="case ID" close="end">
        	when #{sku.id} then #{sku.lockedInventory}
    	</foreach>
		WHERE id IN
    	<foreach collection="skus" item="sku" index="index" separator="," open="(" close=")">
        	#{sku.id}
   	 	</foreach>
	</update>
	
	<!-- ================================================================================== -->
	<!-- SQL查询																				-->
	<!-- ================================================================================== -->
	
	<!-- 根据商品ID查询SKU列表(根据创建时间倒叙)  -->
	<select id="findSkusByGoodsId" parameterType="String" resultMap="skuResultMap">
	  SELECT <include refid="basicFields"/>
	  FROM godsi_sku
	  WHERE gods_id = #{goodsId}
	  ORDER BY cre_tim DESC
	</select>
    
	<!-- 根据商品ID查询SKU总数  -->
	<select id="getSkuCount" parameterType="String" resultType="Integer">
	  SELECT COUNT(*)
	  FROM godsi_sku
	  WHERE gods_id = #{goodsId}
	</select>
	
	<!-- 根据SKUID查询SKU  -->
	<select id="findSkuById" parameterType="String" resultMap="skuResultMap">
	  SELECT <include refid="basicFields"/>
	  FROM godsi_sku
	  WHERE id = #{id}
	</select>
	
	<!-- 根据商品ID和模糊查询关键字（SKU描述关键字）查询SKU列表  -->
	<select id="findSkusLikeDescription" parameterType="Map" resultMap="skuResultMap">
	  SELECT <include refid="basicFields"/>
	  FROM godsi_sku
	  WHERE gods_id = #{goodsId} AND description LIKE CONCAT('%',#{keyword},'%')
	</select>
	
	<!-- ================================================================================== -->
	<!-- 公用SQL定义																			-->
	<!-- ================================================================================== -->
	
	<!-- 基本信息 -->
	<sql id="basicFields">
		id, gods_id, inv_typ, inventory, lock_inv, sal_vol, ori_pr, price, description, code, barcode, crer_id, cre_tim, remark
	</sql>
	
	<!-- ================================================================================== -->
	<!-- 结果集映射																				-->
	<!-- ================================================================================== -->
	
	<resultMap id="skuResultMap" type="Sku">
		<result property="id" column="id" />
		<result property="goodsId" column="gods_id" />
		<result property="inventoryType" column="inv_typ" />
		<result property="inventory" column="inventory" />
		<result property="lockedInventory" column="lock_inv" />
		<result property="salesVolume" column="sal_vol" />
		<result property="originalPrice" column="ori_pr" />
		<result property="price" column="price" />
		<result property="description" column="description" />
		<result property="code" column="code" />
		<result property="barcode" column="barcode" />
		<result property="createrId" column="crer_id" />
		<result property="createTime" column="cre_tim" />
		<result property="remark" column="remark" />
	</resultMap>
</mapper>