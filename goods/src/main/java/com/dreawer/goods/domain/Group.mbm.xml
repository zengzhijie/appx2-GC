<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dreawer.goods.domain.Group">
	
	<!-- ================================================================================== -->
	<!-- SQL新增																				-->
	<!-- ================================================================================== -->
	<!-- 新增类目信息 -->
	<insert id="save" parameterType="Group">
		INSERT INTO godsi_group(id, sto_id, name, par_id, is_par, squence, logo, intro, status, url, gods_qty, crer_id, cre_tim, remark)
        VALUES(#{id}, #{storeId}, #{name}, #{parentId}, #{isParent}, #{squence}, #{logo}, #{intro}, #{status}, #{url}, #{goodsQuantity}, #{createrId}, #{createTime}, #{remark})
	</insert>
	
	<!-- 批量添加分组、商品关系 -->
	<insert id="saveBatchGroupGoods" parameterType="Map">
		INSERT INTO godsi_gr_gods(gr_id, gods_id, crer_id, cre_tim)
        VALUES
        <foreach collection="groupGoodses" item="gr_gods" index="index" separator=",">
           (#{gr_gods.groupId}, #{gr_gods.goodsId}, #{gr_gods.createrId}, #{gr_gods.createTime})
        </foreach>
	</insert>
	
	<!-- ================================================================================== -->
	<!-- SQL删除																				-->
	<!-- ================================================================================== -->
	
	<!-- 根据分组ID删除店分组信息 -->
	<delete id="delete" parameterType="String">
		DELETE gr, gr_gods
		FROM godsi_group AS gr
		LEFT JOIN godsi_gr_gods AS gr_gods ON gr.id = gr_gods.gr_id
		WHERE gr.id = #{id}
	</delete>
	
	<!-- 根据商品ID列表批量删除店铺分类、商品关系 -->
	<delete id="deleteBatchGroupGoods" parameterType="Map">
		DELETE FROM godsi_gr_gods
		WHERE gods_id IN 
		<foreach collection="goodsIds" item="goodsId" open="(" close=")" index="index" separator=",">
			#{goodsId}
		</foreach>
	</delete>
	
	<!-- 根据商品ID批量删除店铺分类、商品关系 -->
	<delete id="deleteGroupGoodsByGoodsIdAndGroupId" parameterType="Map">
		DELETE FROM godsi_gr_gods
		WHERE gods_id = #{goodsId} AND gr_id = #{groupId}
	</delete>
	
	<!-- ================================================================================== -->
	<!-- SQL更新																				-->
	<!-- ================================================================================== -->

	<!-- 更新是否父分组属性 -->
	<update id="updateIsParent" parameterType="Group">
		UPDATE godsi_group
		SET is_par = #{isParent}
		WHERE id = #{id}
	</update>
	
	<!-- 更新排列顺序 -->
	<update id="updateSquence" parameterType="Group">
		UPDATE godsi_group
		SET squence = #{squence}, updr_id = #{updaterId}, upd_tim = #{updateTime}
		WHERE id = #{id}
	</update>
	
	<!-- 批量更新分组状态 -->
	<update id="updateBatchStatus" parameterType="Map">
		UPDATE godsi_group
		SET status = 
		<foreach collection="groups" item="group" index="index" separator=" " open="case ID" close="end">
        	when #{group.id} then #{group.status}
    	</foreach>,
    		updr_id = 
		<foreach collection="groups" item="group" index="index" separator=" " open="case ID" close="end">
        	when #{group.id} then #{group.updaterId}
    	</foreach>,
    		upd_tim = 
		<foreach collection="groups" item="group" index="index" separator=" " open="case ID" close="end">
        	when #{group.id} then #{group.updateTime}
    	</foreach>
		WHERE id IN
    	<foreach collection="groups" item="group" index="index" separator="," open="(" close=")">
        	#{group.id}
   	 	</foreach>
	</update>
	
	<!-- 增加商品数量 -->
	<update id="increaseGoodsQuantity" parameterType="Group">
		UPDATE godsi_group
		SET gods_qty = gods_qty + #{goodsQuantity}
		WHERE id = #{id}
	</update>
	
	<!-- 减少商品数量 -->
	<update id="reduceGoodsQuantity" parameterType="Group">
		UPDATE godsi_group
		SET gods_qty = gods_qty - #{goodsQuantity}
		WHERE id = #{id}
	</update>
	
	<!-- 通过商品ID更新分组中的商品数（商品数加一） -->
	<update id="increaseGoodsQuantityByGoodsId" parameterType="String">
		UPDATE godsi_group AS gr
		LEFT JOIN godsi_gr_gods AS gr_gods ON gr.id = gr_gods.gr_id
		SET gr.gods_qty = gr.gods_qty + 1
		WHERE gr_gods.gods_id = #{goodsId}
	</update>
	
	<!-- 通过商品ID列表批量更新分组中的商品数（商品数减一） -->
	<update id="reduceBatchGoodsQuantityByGoodsId" parameterType="String">
		UPDATE godsi_group AS gr
		LEFT JOIN godsi_gr_gods AS gr_gods ON gr.id = gr_gods.gr_id
		SET gr.gods_qty = gr.gods_qty - 1
		WHERE gr_gods.gods_id IN
		<foreach collection="goodsIds" item="goodsId" open="(" close=")" index="index" separator=",">
			#{goodsId}
		</foreach>
	</update>
	
	<!-- 更新分组信息（名称、是否父分组属性、排列序号、LOGO、简介、状态、URL、商品数） -->
	<update id="update" parameterType="Group">
		UPDATE godsi_group
		<set>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="isParent != null">
				is_par = #{isParent},
			</if>
			<if test="squence != null">
				squence = #{squence},
			</if>
			<if test="logo != null">
				logo = #{logo},
			</if>
			<if test="intro != null">
				intro = #{intro},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="url != null">
				url = #{url},
			</if>
			<if test="goodsQuantity != null">
				gods_qty = #{goodsQuantity},
			</if>
			updr_id = #{updater.id}, upd_tim = #{updateTime}
		</set>
		WHERE id = #{id}
	</update>
	
	<!-- ================================================================================== -->
	<!-- SQL查询																				-->
	<!-- ================================================================================== -->
	
	<!-- 根据父ID、店铺ID、分组状态查询分组列表(根据排列序号正序)  -->
	<select id="findChildGroups" parameterType="Map" resultMap="groupResultMap">
		SELECT <include refid="basicFields"/>
	  	FROM godsi_group
	  	WHERE par_id = #{parentId} AND sto_id = #{storeId}
	  	<if test="status != null">
	  		AND status = #{status}
	  	</if>
	  	ORDER BY squence ASC		
	</select>
    
	<!-- 根据父ID、店铺ID、分组状态获取分组总数  -->
	<select id="getChildGroupCount" parameterType="Map" resultType="Integer">
		SELECT COUNT(1)
	  	FROM godsi_group
		WHERE par_id = #{parentId} AND sto_id = #{storeId}
	  	<if test="status != null">
	  		AND status = #{status}
	  	</if>
	</select>
	
	<!-- 根据分组ID查询分组信息  -->
	<select id="findGroupById" parameterType="String" resultMap="groupResultMap">
	  SELECT <include refid="basicFields"/>
	  FROM godsi_group
	  WHERE id = #{id}
	</select>
	
	<!-- 根据父分组ID、店铺ID和分组名称查询分组信息  -->
	<select id="findGroupByParentIdAndName" parameterType="Map" resultMap="groupResultMap">
	  SELECT <include refid="basicFields"/>
	  FROM godsi_group
	  WHERE par_id = #{parentId} AND sto_id = #{storeId} AND name = #{name}
	</select>
	
	<!-- 根据商品ID查询分组列表(分组状态为正常)  -->
	<select id="findGroupsByGoodsId" parameterType="String" resultMap="groupResultMap">
	  SELECT <include refid="basicFields"/>
	  FROM godsi_group AS gr
	  LEFT JOIN godsi_gr_gods AS gr_gods ON gr.id = gr_gods.gr_id
	  WHERE gr_gods.gods_id = #{goodsId} AND gr.status = 'DEFAULT'
	</select>
	
	<!-- 根据商品ID、分组ID查询分组信息  -->
	<select id="findGroupByIdAndGoodsId" parameterType="String" resultMap="groupResultMap">
	  SELECT <include refid="basicFields"/>
	  FROM godsi_group AS gr
	  LEFT JOIN godsi_gr_gods AS gr_gods ON gr.id = gr_gods.gr_id
	  WHERE gr_gods.gods_id = #{goodsId} AND gr_gods.id = #{id}
	</select>
	
	<!-- ================================================================================== -->
	<!-- 公用SQL定义																			-->
	<!-- ================================================================================== -->
	
	<!-- 基本信息 -->
	<sql id="basicFields">
		id, sto_id, name, par_id, is_par, squence, logo, intro, status, url, gods_qty, crer_id, cre_tim, remark
	</sql>
	
	<!-- ================================================================================== -->
	<!-- 结果集映射																				-->
	<!-- ================================================================================== -->
	
	<resultMap id="groupResultMap" type="Group">
		<result property="id" column="id" />
		<result property="storeId" column="sto_id" />
		<result property="name" column="name" />
		<result property="parentId" column="par_id" />
		<result property="isParent" column="is_par" />
		<result property="squence" column="squence" />
		<result property="logo" column="logo" />
		<result property="intro" column="intro" />
		<result property="status" column="status" />
		<result property="url" column="url" />
		<result property="goodsQuantity" column="gods_qty" />
		<result property="createrId" column="crer_id" />
		<result property="createTime" column="cre_tim" />
		<result property="updaterId" column="updr_id" />
		<result property="updateTime" column="upd_tim" />
		<result property="remark" column="remark" />
	</resultMap>
</mapper>